<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
	
	// Get value from the user_name path parameter passed in the URL
	var username = request.pathParams.user_name;
	// Get value of the ni_query query parameter passed in the URL
	 var niquery = request.queryParams.ni_query;
	
	// Query the sys_user table to get the user record for the user passed in
// the user_id path parameter. 
	
	var userrecord = new GlideRecord('sys_user');
	userrecord.get('user_name', username);
	
	// Get the count of active NeedIt table records where the user from the
// user_name path parameter is the Requested for.  The encoded query is from the
// Query Parameter Associations.  Group by category.
	
	var needitrecord = new GlideAggregate('x_58872_needit_needit');
	needitrecord.addAggregate('COUNT');
	needitrecord.addQuery('u_requested_for', userrecord.sys_id);
	needitrecord.addEncodedQuery(niquery);
	needitrecord.groupBy('u_request_type');
	needitrecord.query();
	
	var needitRecs = 0;
    var niUserRecs = [];
    var needitRecsCount = 0;
	
	while (needitrecord.next()) {
		needitRecs = needitrecord.getAggregate('COUNT');
		var reqtype = needitrecord.u_request_type.getDisplayValue();
		niUserRecs.push({"reqtype" : reqtype, "Count" : needitRecs});
		needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
	}
		
//Create a body object.  Add property value pairs to the body.
		
	var body = {};
		body.totalUserNIRecs = needitRecsCount;
		body.catCounts = niUserRecs;
		body.user = {"User name": userrecord.user_name,
"User ID": userrecord.sys_id};
		
		// Send the response object, which is returned to the requestor, to the body object.
response.setBody(body);
		
	}
	

)(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the NeedIt active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-21 10:01:33</sys_created_on>
        <sys_id>8cb6c551db36730052398809489619e6</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>ni_getinfo</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_8cb6c551db36730052398809489619e6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-07-21 11:16:23</sys_updated_on>
        <web_service_definition display_value="NeedIt API">572ddcd5dbb2730052398809489619df</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
